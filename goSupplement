###変数のアドレス取得方法
Goでは & を用いることで変数のアドレスの取得が可能です。

###ポインタ型変数の中身へのアクセス方法
ポインタ型変数名の前に * をつけることで変数の中身へのアクセスが可能です。

###ポインタ型変数
初期値が指定されていない場合、Go 言語のポインタは nil (nil ポインタ) に初期化されます。

###newを使った初期化
newを利用してポインタ型で構造体を初期化する方法です。
user := new(User)はuser := &User{}と同じ意味になります。
つまり、newを利用した場合は『変数定義 → フィールド値のセット』と2段階で初期化することになります。
※１行で初期化ができない。

###引数やレシーバを関数内で書き換える必要がある場合、ポインタを使う。
・値レシーバー
「値渡し」となりコピーを触っていることになるため、意図した挙動にはならず、
・ポインタレシーバ
「参照渡し」なので、上書きすることが可能となっています。